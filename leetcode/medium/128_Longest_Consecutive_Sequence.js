// 문제 유형: [해시 셋 사용, 선형 시간 복잡도 요구]
/**
 * 문제 설명:
 * 주어진 정수 배열에서 가장 긴 연속된 수열의 길이를 찾는 문제입니다. 
 * 예를 들어, `[100, 4, 200, 1, 3, 2]`에서는 `[1, 2, 3, 4]`가 가장 긴 연속 수열이므로 길이는 4입니다.
 * 시간 복잡도가 O(n)이어야 하므로, 배열을 정렬하는 방법은 사용할 수 없습니다.
 * 
 * 제한 사항:
 * 1. 0 <= nums.length <= 10^5
 * 2. -10^9 <= nums[i] <= 10^9
 * 
 * 입출력 예:
 * nums = [100,4,200,1,3,2] -> return 4
 * nums = [0,3,7,2,5,8,4,6,0,1] -> return 9
 * 
 * 입출력 예 설명:
 * 1. 예제 #1: [1, 2, 3, 4]가 가장 긴 연속 수열이므로 길이는 4입니다.
 * 2. 예제 #2: [0, 1, 2, 3, 4, 5, 6, 7, 8]이 가장 긴 연속 수열이므로 길이는 9입니다.
 */

function solution(nums) {
    const set = new Set(nums);
    let max = 0;

    for (let num of nums) {
        if (!set.has(num - 1)) {  // 연속 수열의 시작점인지 확인
            let current = num;
            let currentLength = 1;

            while (set.has(current + 1)) { // 수열 확장
                current += 1;
                currentLength += 1;
            }

            max = Math.max(currentLength, max);
        }
    }
    return max;
}

// 입출력 예시 테스트
console.log(solution([100, 4, 200, 1, 3, 2])); // 기대 값: 4
console.log(solution([0, 3, 7, 2, 5, 8, 4, 6, 0, 1])); // 기대 값: 9

/**
 * 시간 복잡도:
 * O(n) - 각 숫자에 대해 최대 한 번의 연산만 수행하므로 선형 시간 복잡도를 가집니다.
 * 
 * 공간 복잡도:
 * O(n) - 모든 숫자를 Set에 저장하여 추가 공간을 사용합니다.
 */

/**
 * 개선할 점:
 * - 이 코드는 이미 O(n) 복잡도로 최적화되어 있으며, 추가적인 개선 사항은 없습니다.
 */