// 문제 유형: [탐욕법 문제]
/**
 * 문제 설명:
 * 주어진 정수를 로마 숫자로 변환하는 문제입니다. 로마 숫자는 특정 규칙에 따라 숫자와 기호의 조합으로 이루어져 있으며, 
 * 이 문제에서는 로마 숫자를 구성하는 기본 규칙과 4, 9에 대한 특수 규칙을 적용하여 변환해야 합니다.
 * 
 * 제한 사항:
 * 1. 입력 정수는 1 이상 3999 이하입니다.
 * 2. 로마 숫자는 최대 3번까지 반복될 수 있습니다 (I, X, C, M만 가능).
 * 3. 4, 9는 빼기 표기법을 사용하여 나타냅니다 (예: IV, IX).
 * 4. 동일한 기호 V, L, D는 반복될 수 없습니다.
 * 5. 최대값 3999는 'MMMCMXCIX'로 변환됩니다.
 * 
 * 입출력 예:
 * num = 3 -> return "III"
 * num = 58 -> return "LVIII"
 * num = 1994 -> return "MCMXCIV"
 * 
 * 입출력 예 설명:
 * 1. 예제 #1: 3은 'III'으로 변환됩니다.
 * 2. 예제 #2: 58은 'L'(50) + 'V'(5) + 'III'(3)로 구성됩니다.
 * 3. 예제 #3: 1994는 'M'(1000) + 'CM'(900) + 'XC'(90) + 'IV'(4)로 구성됩니다.
 */

function solution(num) {
    const romanMap = [
        [1000, 'M'],
        [900, 'CM'],
        [500, 'D'],
        [400, 'CD'],
        [100, 'C'],
        [90, 'XC'],
        [50, 'L'],
        [40, 'XL'],
        [10, 'X'],
        [9, 'IX'],
        [5, 'V'],
        [4, 'IV'],
        [1, 'I']
    ];

    let result = "";

    for (let [value, symbol] of romanMap) {
        while (num >= value) {
            result += symbol;
            num -= value;
        }
    }
    return result;
}

// 입출력 예시 테스트
console.log(solution(3)); // 기대 값: "III"
console.log(solution(58)); // 기대 값: "LVIII"
console.log(solution(1994)); // 기대 값: "MCMXCIV"

/**
 * 시간 복잡도: O(1)
 * - 정수는 최대 3999로 고정되어 있으므로 고정된 반복 횟수 내에서 변환이 이루어집니다.
 * 
 * 공간 복잡도: O(1)
 * - 결과 문자열과 매핑 배열 외에 추가 공간이 필요하지 않습니다.
 */

/**
 * 개선할 점:
 * - 현재 코드 구조는 효율적이지만, 변환 속도를 추가적으로 최적화할 필요가 있는지 테스트할 수 있습니다.
 */