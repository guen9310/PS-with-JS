// 문제 유형: [탐욕법 문제]

// 문제 설명:
// 배열 nums가 주어졌을 때, 다수의 요소를 반환하세요. 다수 요소란 배열 크기의 절반 이상 등장하는 요소를 의미합니다. 
// 항상 다수 요소는 하나 존재한다고 가정합니다.

// 제한 사항:
// 1. n == nums.length
// 2. 1 <= n <= 5 * 10^4
// 3. -10^9 <= nums[i] <= 10^9

// 입출력 예:
// nums = [3,2,3] -> return 3
// nums = [2,2,1,1,1,2,2] -> return 2

// 입출력 예 설명:
// 1. 예제 #1: 배열 [3,2,3]에서 다수 요소는 3으로, 3은 배열 크기의 절반 이상 등장합니다.
// 2. 예제 #2: 배열 [2,2,1,1,1,2,2]에서 다수 요소는 2로, 2는 배열 크기의 절반 이상 등장합니다.

function solution(nums) {
    let count = 0;
    let major = 0;
    for (let num of nums) {
        if (count === 0) {
            major = num;
        }
        count += (major === num) ? 1 : -1;
    }
    return major;
}

// 입출력 예시 테스트
console.log(solution([3, 2, 3])); // 기대 값: 3
console.log(solution([2, 2, 1, 1, 1, 2, 2])); // 기대 값: 2

// 시간 복잡도:
// O(n) - 배열의 요소를 한 번씩 순회하기 때문입니다.

// 공간 복잡도:
// O(1) - 주로 count와 major 변수만을 사용하므로 추가 공간이 거의 필요하지 않습니다.

/**
 * 개선할 점:
 * 현재 알고리즘은 최적화된 상태입니다. 다수 요소가 항상 존재한다고 가정할 수 있어 Boyer-Moore Voting Algorithm을 사용하여 효율적으로 해결했습니다.
 */