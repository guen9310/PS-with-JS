// 문제 유형: [배열 순회 문제, 슬라이딩 윈도우 문제]
/**
 * 문제 설명:
 * 정수 배열 arr이 주어졌을 때, 세 개의 연속된 홀수가 배열에 포함되어 있다면 true를 반환하고,
 * 그렇지 않다면 false를 반환합니다.
 * 
 * 제한 사항:
 * 1. 1 <= arr.length <= 1000
 * 2. 1 <= arr[i] <= 1000
 * 
 * 입출력 예:
 * arr = [2,6,4,1] -> return false
 * arr = [1,2,34,3,4,5,7,23,12] -> return true
 * 
 * 입출력 예 설명:
 * 1. 예제 #1: [2,6,4,1] 배열에는 세 개의 연속된 홀수가 없습니다.
 * 2. 예제 #2: [1,2,34,3,4,5,7,23,12] 배열에서 [5,7,23]이 세 개의 연속된 홀수입니다.
 */

function solution(arr) {
    let count = 0;

    for (let i = 0; i < arr.length; i++) {
        if (arr[i] % 2 !== 0) {
            count++;
        } else {
            count = 0;
        }

        if (count === 3) return true;
    }

    return false;
}

// 입출력 예시 테스트
console.log(solution([2, 6, 4, 1])); // 기대 값: false
console.log(solution([1, 2, 34, 3, 4, 5, 7, 23, 12])); // 기대 값: true

/**
 * 시간 복잡도:
 * 배열을 한 번 순회하므로 O(n), 여기서 n은 배열의 길이입니다.
 * 
 * 공간 복잡도:
 * 추가 메모리를 사용하지 않으므로 O(1).
 */

/**
 * 개선할 점:
 * - 현재 로직은 문제를 효율적으로 해결하며, 추가적인 개선 사항은 필요하지 않습니다.
 */